name: Release Build

on:
    push:
        tags: ["v*"]
    workflow_dispatch:
        inputs:
            tag:
                description: "Tag to build (e.g., v1.0.12)"
                required: true
                default: "latest"

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract version from tag
              id: version
              run: |
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    echo "version=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
                  else
                    echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                  fi

            - name: Build and push release Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Update README with Docker instructions
              run: |
                  echo "## Docker Usage" >> README_DOCKER.md
                  echo "" >> README_DOCKER.md
                  echo "### Latest Version" >> README_DOCKER.md
                  echo '```bash' >> README_DOCKER.md
                  echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> README_DOCKER.md
                  echo '```' >> README_DOCKER.md
                  echo "" >> README_DOCKER.md
                  echo "### Specific Version (${{ steps.version.outputs.version }})" >> README_DOCKER.md
                  echo '```bash' >> README_DOCKER.md
                  echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}" >> README_DOCKER.md
                  echo '```' >> README_DOCKER.md
